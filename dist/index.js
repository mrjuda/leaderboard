(()=>{"use strict";var n={800:(n,e,t)=>{t.d(e,{Z:()=>a});var r=t(537),o=t.n(r),A=t(645),i=t.n(A)()(o());i.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Comic+Neue:wght@400;700&display=swap);"]),i.push([n.id,'*{font-family:"Comic neue",cursive,"Courier New",Courier,monospace}body{text-align:center;text-decoration:none;background-color:#f8f8f8;margin:0;padding:0}ul{list-style-type:none;margin:0;padding:0;margin-block-start:0;margin-block-end:0;margin-inline-start:0;margin-inline-end:0;padding-inline-start:0}h1{font-size:2rem;font-weight:bolder;margin:.4rem}.hidden{display:none}.container{display:flex;flex-direction:column-reverse;margin:0 4%}.inner-container{background-color:#fff;font-size:.8rem;margin:.5rem;box-shadow:.2rem .2rem .9rem #bbb}.inner-container .inner-container-header{display:flex;flex-direction:row;justify-content:space-between;align-items:center;padding:.6rem;border-bottom:1px solid #ddd}.inner-container .inner-title{font-size:1.2rem;font-weight:bold}.score-board{display:flex;flex-direction:column}.score-board ul{text-align:left}.score-board ul li,.score-board ul .score-list-li{margin:0;padding:.4rem .4rem;border-bottom:1px solid #ddd;text-align:left;list-style:none}.score-board ul li .score-set,.score-board ul .score-list-li .score-set{padding:.2rem;font-size:.8rem;text-align:left;margin:.2rem;border:none;outline:none}.add-score{display:flex;flex-direction:column;height:10.5rem}.add-score input{font-size:.8rem;padding:.6rem;outline:none;border:none;border-bottom:1px solid #ddd}.add-score .new-input::placeholder{color:#888}.btn{font-size:1rem;text-align:center;font-weight:bold;border:solid .2rem #000;width:4rem;background-color:#fff;box-shadow:2px 3px 1px rgba(0,0,0,.9);margin:0;padding:.2rem .6rem;cursor:pointer;user-select:none;-webkit-user-select:none;-khtml-user-select:none;-moz-user-select:none;-ms-user-select:none}.btn:hover{color:#fff;background-color:#000}.add-button{margin:.6rem;align-self:flex-end}.refresh-button{align-self:flex-end}@media screen and (min-width: 510px){.container{display:grid;grid-template-columns:65% 35%;margin:0 4%}}@media screen and (min-width: 768px){.container{margin:0 12%}}',"",{version:3,sources:["webpack://./src/index.scss"],names:[],mappings:"AAIA,EACE,gEAAA,CAGF,KACE,iBAAA,CACA,oBAAA,CACA,wBAAA,CACA,QAAA,CACA,SAAA,CAGF,GACE,oBAAA,CACA,QAAA,CACA,SAAA,CACA,oBAAA,CACA,kBAAA,CACA,qBAAA,CACA,mBAAA,CACA,sBAAA,CAGF,GACE,cAAA,CACA,kBAAA,CACA,YAAA,CAGF,QACE,YAAA,CAGF,WACE,YAAA,CACA,6BAAA,CACA,WAAA,CAGF,iBACE,qBAAA,CACA,eAAA,CACA,YAAA,CACA,iCAAA,CAEA,yCACE,YAAA,CACA,kBAAA,CACA,6BAAA,CACA,kBAAA,CACA,aAAA,CACA,4BAAA,CAGF,8BACE,gBAAA,CACA,gBAAA,CAIJ,aACE,YAAA,CACA,qBAAA,CAEA,gBACE,eAAA,CAEA,kDAEE,QAAA,CACA,mBAAA,CACA,4BAAA,CACA,eAAA,CACA,eAAA,CAEA,wEACE,aAAA,CACA,eAAA,CACA,eAAA,CACA,YAAA,CACA,WAAA,CACA,YAAA,CAMR,WACE,YAAA,CACA,qBAAA,CACA,cAAA,CAEA,iBACE,eAAA,CACA,aAAA,CACA,YAAA,CACA,WAAA,CACA,4BAAA,CAGF,mCACE,UAAA,CAIJ,KACE,cAAA,CACA,iBAAA,CACA,gBAAA,CACA,uBAAA,CAEA,UAAA,CACA,qBAAA,CACA,qCAAA,CACA,QAAA,CACA,mBAAA,CACA,cAAA,CACA,gBAAA,CACA,wBAAA,CACA,uBAAA,CACA,qBAAA,CACA,oBAAA,CAGF,WACE,UAAA,CACA,qBAAA,CAGF,YACE,YAAA,CACA,mBAAA,CAGF,gBAEE,mBAAA,CAKF,qCACE,WACE,YAAA,CACA,6BAAA,CACA,WAAA,CAAA,CAMJ,qCACE,WACE,YAAA,CAAA",sourcesContent:["// style.scss\n\n@import url('https://fonts.googleapis.com/css2?family=Comic+Neue:wght@400;700&display=swap');\n\n* {\n  font-family: 'Comic neue', cursive, 'Courier New', Courier, monospace;\n}\n\nbody {\n  text-align: center;\n  text-decoration: none;\n  background-color: #f8f8f8;\n  margin: 0;\n  padding: 0;\n}\n\nul {\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n  margin-block-start: 0;\n  margin-block-end: 0;\n  margin-inline-start: 0;\n  margin-inline-end: 0;\n  padding-inline-start: 0;\n}\n\nh1 {\n  font-size: 2rem;\n  font-weight: bolder;\n  margin: 0.4rem;\n}\n\n.hidden {\n  display: none;\n}\n\n.container {\n  display: flex;\n  flex-direction: column-reverse;\n  margin: 0 4%;\n}\n\n.inner-container {\n  background-color: #fff;\n  font-size: 0.8rem;\n  margin: 0.5rem;\n  box-shadow: 0.2rem 0.2rem 0.9rem #bbb;\n\n  .inner-container-header {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    padding: 0.6rem;\n    border-bottom: 1px solid #ddd;\n  }\n\n  .inner-title {\n    font-size: 1.2rem;\n    font-weight: bold;\n  }\n}\n\n.score-board {\n  display: flex;\n  flex-direction: column;\n\n  ul {\n    text-align: left;\n\n    li,\n    .score-list-li {\n      margin: 0;\n      padding: 0.4rem 0.4rem;\n      border-bottom: 1px solid #ddd;\n      text-align: left;\n      list-style: none;\n\n      .score-set {\n        padding: 0.2rem;\n        font-size: 0.8rem;\n        text-align: left;\n        margin: 0.2rem;\n        border: none;\n        outline: none;\n      }\n    }\n  }\n}\n\n.add-score {\n  display: flex;\n  flex-direction: column;\n  height: 10.5rem;\n\n  input {\n    font-size: 0.8rem;\n    padding: 0.6rem;\n    outline: none;\n    border: none;\n    border-bottom: 1px solid #ddd;\n  }\n\n  .new-input::placeholder {\n    color: #888;\n  }\n}\n\n.btn {\n  font-size: 1rem;\n  text-align: center;\n  font-weight: bold;\n  border: solid 0.2rem black;\n  // width: fit-content;\n  width: 4rem;\n  background-color: #fff;\n  box-shadow: 2px 3px 1px rgba(0, 0, 0, 0.9);\n  margin: 0;\n  padding: 0.2rem 0.6rem;\n  cursor: pointer;\n  user-select: none; /* supported by Chrome and Opera */\n  -webkit-user-select: none; /* Safari */\n  -khtml-user-select: none; /* Konqueror HTML */\n  -moz-user-select: none; /* Firefox */\n  -ms-user-select: none; /* Internet Explorer/Edge */\n}\n\n.btn:hover {\n  color: #fff;\n  background-color: #000;\n}\n\n.add-button {\n  margin: 0.6rem;\n  align-self: flex-end;\n}\n\n.refresh-button {\n  // margin: 0.6rem;\n  align-self: flex-end;\n}\n\n/* ##### TABLET DESIGN ##### */\n\n@media screen and (min-width: 510px) {\n  .container {\n    display: grid;\n    grid-template-columns: 65% 35%;\n    margin: 0 4%;\n  }\n}\n\n/* ##### DESKTOP DESIGN ##### */\n\n@media screen and (min-width: 768px) {\n  .container {\n    margin: 0 12%;\n  }\n}\n"],sourceRoot:""}]);const a=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,A){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(r)for(var a=0;a<this.length;a++){var s=this[a][0];null!=s&&(i[s]=!0)}for(var c=0;c<n.length;c++){var d=[].concat(n[c]);r&&i[d[0]]||(void 0!==A&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=A),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),e.push(d))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),A="/*# ".concat(o," */"),i=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([A]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var A={},i=[],a=0;a<n.length;a++){var s=n[a],c=r.base?s[0]+r.base:s[0],d=A[c]||0,l="".concat(c," ").concat(d);A[c]=d+1;var m=t(l),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==m)e[m].references++,e[m].updater(u);else{var C=o(u,r);r.byIndex=a,e.splice(a,0,{identifier:l,updater:C,references:1})}i.push(l)}return i}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var A=r(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<A.length;i++){var a=t(A[i]);e[a].references--}for(var s=r(n,o),c=0;c<A.length;c++){var d=t(A[c]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}A=s}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var A=t.sourceMap;A&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(A))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var A=e[r]={id:r,exports:{}};return n[r](A,A.exports,t),A.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{const n="https://us-central1-js-capstone-backend.cloudfunctions.net/api/games/ZSNfw2bTfTpIlfl4zgl7/scores",e=document.getElementById("newName"),r=document.getElementById("newScore");var o=t(379),A=t.n(o),i=t(795),a=t.n(i),s=t(569),c=t.n(s),d=t(565),l=t.n(d),m=t(216),u=t.n(m),C=t(589),p=t.n(C),f=t(800),g={};g.styleTagTransform=p(),g.setAttributes=l(),g.insert=c().bind(null,"head"),g.domAPI=a(),g.insertStyleElement=u(),A()(f.Z,g),f.Z&&f.Z.locals&&f.Z.locals;const b=new class{table=[];scoreTable;refreshButton=document.getElementById("refreshButton");addButton=document.getElementById("addButton");newName=document.getElementById("newName");newScore=document.getElementById("newScore");displayScoreSet=()=>{(async()=>{const e=await fetch(n);return(await e.json()).result})().then((n=>{const e=n.sort(((n,e)=>e.score-n.score)),t=document.getElementById("scoreListTable");t.innerHTML="",e.forEach((n=>{const e=document.createElement("li");e.classList.add("score-set");const r=`\n            <span>${n.user} - </span>\n            <span>${n.score}</span>\n          `;e.innerHTML=r,t.appendChild(e)}))}))};setUpAddListener=()=>{this.addButton.addEventListener("click",(t=>{t.preventDefault(),(async()=>{const t=await fetch(n,{method:"POST",headers:{"Content-type":"application/json; charset=UTF-8"},body:JSON.stringify({user:e.value,score:r.value})});await t.json()})(),this.newName.value="",this.newScore.value=""}))};setUpRefreshListener=()=>{this.refreshButton.addEventListener("click",(()=>{this.displayScoreSet()}))}};b.displayScoreSet(),b.setUpAddListener(),b.setUpRefreshListener()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,