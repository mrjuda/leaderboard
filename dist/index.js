"use strict";(self.webpackChunkleaderboard=self.webpackChunkleaderboard||[]).push([[826],{800:(e,n,t)=>{t.d(n,{Z:()=>A});var r=t(537),o=t.n(r),i=t(645),a=t.n(i)()(o());a.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Comic+Neue:wght@400;700&display=swap);"]),a.push([e.id,'*{font-family:"Comic neue",cursive,"Courier New",Courier,monospace}body{text-align:center;text-decoration:none;background-color:#f8f8f8;margin:0;padding:0}ul{list-style-type:none;margin:0;padding:0;margin-block-start:0;margin-block-end:0;margin-inline-start:0;margin-inline-end:0;padding-inline-start:0}h1{font-size:2.4rem;font-weight:bolder;margin:.4rem}.hidden{display:none}.container{display:grid;grid-template-columns:65% 35%}.inner-container{background-color:#fff;font-size:.8rem;margin:.5rem;box-shadow:.2rem .2rem .9rem #bbb}.inner-container .inner-container-header{display:flex;flex-direction:row;justify-content:space-between;align-items:center;padding:.6rem;border-bottom:1px solid #ddd}.inner-container .inner-title{font-size:1.8rem;font-weight:bold}.score-board{display:flex;flex-direction:column}.score-board ul{text-align:left}.score-board ul li,.score-board ul .score-list-li{margin:0;padding:.4rem .4rem;border-bottom:1px solid #ddd;text-align:left;list-style:none}.score-board ul li .score-set,.score-board ul .score-list-li .score-set{padding:.2rem;font-size:.8rem;text-align:left;margin:.2rem;border:none;outline:none}.add-score{display:flex;flex-direction:column;height:11rem}.add-score input{font-size:.8rem;padding:.6rem;outline:none;border:none;border-bottom:1px solid #ddd}.add-score .new-input::placeholder{color:#888}.btn{font-size:1rem;text-align:center;font-weight:bold;border:solid .2rem #000;width:fit-content;background-color:#fff;box-shadow:2px 3px 1px rgba(0,0,0,.9);margin:0;padding:.2rem .6rem;cursor:pointer}.new-input-btn{margin:.6rem;align-self:flex-end}',"",{version:3,sources:["webpack://./src/index.scss"],names:[],mappings:"AAIA,EACE,gEAAA,CAGF,KACE,iBAAA,CACA,oBAAA,CACA,wBAAA,CACA,QAAA,CACA,SAAA,CAGF,GACE,oBAAA,CACA,QAAA,CACA,SAAA,CACA,oBAAA,CACA,kBAAA,CACA,qBAAA,CACA,mBAAA,CACA,sBAAA,CAGF,GACE,gBAAA,CACA,kBAAA,CACA,YAAA,CAGF,QACE,YAAA,CAGF,WACE,YAAA,CACA,6BAAA,CAGF,iBACE,qBAAA,CACA,eAAA,CACA,YAAA,CACA,iCAAA,CAEA,yCACE,YAAA,CACA,kBAAA,CACA,6BAAA,CACA,kBAAA,CACA,aAAA,CACA,4BAAA,CAGF,8BACE,gBAAA,CACA,gBAAA,CAIJ,aACE,YAAA,CACA,qBAAA,CAEA,gBACE,eAAA,CAEA,kDAEE,QAAA,CACA,mBAAA,CACA,4BAAA,CACA,eAAA,CACA,eAAA,CAEA,wEACE,aAAA,CACA,eAAA,CACA,eAAA,CACA,YAAA,CACA,WAAA,CACA,YAAA,CAMR,WACE,YAAA,CACA,qBAAA,CACA,YAAA,CAEA,iBACE,eAAA,CACA,aAAA,CACA,YAAA,CACA,WAAA,CACA,4BAAA,CAGF,mCACE,UAAA,CAIJ,KACE,cAAA,CACA,iBAAA,CACA,gBAAA,CACA,uBAAA,CACA,iBAAA,CACA,qBAAA,CACA,qCAAA,CACA,QAAA,CACA,mBAAA,CACA,cAAA,CAGF,eACE,YAAA,CACA,mBAAA",sourcesContent:["// style.scss\n\n@import url('https://fonts.googleapis.com/css2?family=Comic+Neue:wght@400;700&display=swap');\n\n* {\n  font-family: 'Comic neue', cursive, 'Courier New', Courier, monospace;\n}\n\nbody {\n  text-align: center;\n  text-decoration: none;\n  background-color: #f8f8f8;\n  margin: 0;\n  padding: 0;\n}\n\nul {\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n  margin-block-start: 0;\n  margin-block-end: 0;\n  margin-inline-start: 0;\n  margin-inline-end: 0;\n  padding-inline-start: 0;\n}\n\nh1 {\n  font-size: 2.4rem;\n  font-weight: bolder;\n  margin: 0.4rem;\n}\n\n.hidden {\n  display: none;\n}\n\n.container {\n  display: grid;\n  grid-template-columns: 65% 35%;\n}\n\n.inner-container {\n  background-color: #fff;\n  font-size: 0.8rem;\n  margin: 0.5rem;\n  box-shadow: 0.2rem 0.2rem 0.9rem #bbb;\n\n  .inner-container-header {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    padding: 0.6rem;\n    border-bottom: 1px solid #ddd;\n  }\n\n  .inner-title {\n    font-size: 1.8rem;\n    font-weight: bold;\n  }\n}\n\n.score-board {\n  display: flex;\n  flex-direction: column;\n\n  ul {\n    text-align: left;\n\n    li,\n    .score-list-li {\n      margin: 0;\n      padding: 0.4rem 0.4rem;\n      border-bottom: 1px solid #ddd;\n      text-align: left;\n      list-style: none;\n\n      .score-set {\n        padding: 0.2rem;\n        font-size: 0.8rem;\n        text-align: left;\n        margin: 0.2rem;\n        border: none;\n        outline: none;\n      }\n    }\n  }\n}\n\n.add-score {\n  display: flex;\n  flex-direction: column;\n  height: 11rem;\n\n  input {\n    font-size: 0.8rem;\n    padding: 0.6rem;\n    outline: none;\n    border: none;\n    border-bottom: 1px solid #ddd;\n  }\n\n  .new-input::placeholder {\n    color: #888;\n  }\n}\n\n.btn {\n  font-size: 1rem;\n  text-align: center;\n  font-weight: bold;\n  border: solid 0.2rem black;\n  width: fit-content;\n  background-color: #fff;\n  box-shadow: 2px 3px 1px rgba(0, 0, 0, 0.9);\n  margin: 0;\n  padding: 0.2rem 0.6rem;\n  cursor: pointer;\n}\n\n.new-input-btn {\n  margin: 0.6rem;\n  align-self: flex-end;\n}\n"],sourceRoot:""}]);const A=a},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,o,i){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(r)for(var A=0;A<this.length;A++){var s=this[A][0];null!=s&&(a[s]=!0)}for(var l=0;l<e.length;l++){var c=[].concat(e[l]);r&&a[c[0]]||(void 0!==i&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=i),t&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=t):c[2]=t),o&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=o):c[4]="".concat(o)),n.push(c))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */"),a=t.sources.map((function(e){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(e," */")}));return[n].concat(a).concat([i]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var i={},a=[],A=0;A<e.length;A++){var s=e[A],l=r.base?s[0]+r.base:s[0],c=i[l]||0,d="".concat(l," ").concat(c);i[l]=c+1;var u=t(d),p={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==u)n[u].references++,n[u].updater(p);else{var m=o(p,r);r.byIndex=A,n.splice(A,0,{identifier:d,updater:m,references:1})}a.push(d)}return a}function o(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,o){var i=r(e=e||[],o=o||{});return function(e){e=e||[];for(var a=0;a<i.length;a++){var A=t(i[a]);n[A].references--}for(var s=r(e,o),l=0;l<i.length;l++){var c=t(i[l]);0===n[c].references&&(n[c].updater(),n.splice(c,1))}i=s}}},569:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},313:(e,n,t)=>{class r{}class o{name;score;index}class i{table=[];scoreTable;addButton=document.getElementById("addButton");newName=document.getElementById("newName");newScore=document.getElementById("newScore");scoreListTable=document.getElementById("scoreListTable");inputField;static pushToStorage=e=>{const n=JSON.stringify(e);localStorage.setItem("strScore",n)};static displayScoreSet(e,n,t){return`\n    <div class="score-set scoreSetId${t}">\n      <span>${e} - </span>\n      <span>${n}</span>\n    </div>\n        `}pullFromStorage=()=>{if(!localStorage.getItem("strScore"))return 0;const e=JSON.parse(localStorage.getItem("strScore"));let n=1;const t=[],r=Object.values(e).length;for(let o=0;o<r;o+=1){if(0===this.table.length)for(let n=0;n<r;n+=1)this.table.push(Object.values(e)[n]);const o=e[`${n}`],a=i.displayScoreSet(o.name,o.score,n);t.push(a),n+=1}return t};paintToPage=()=>{const e=this.pullFromStorage();this.scoreListTable.innerHTML="";for(let n=0;n<e.length;n+=1){const t=document.createElement("li");t.classList.add("score-list-li"),t.innerHTML=e[n],t.id=n+1,this.scoreListTable.appendChild(t)}};updateTable=()=>{this.scoreTable=new r;let e=0;for(let n=0;n<this.table.length;n+=1)e+=1,this.table[n].id=e;for(let e=0;e<this.table.length;e+=1)this.scoreTable[`${this.table[e].id}`]=this.table[e];i.pushToStorage(this.scoreTable)};newScoreSet=(e,n)=>{this.scoreTable=new r;const t=new o;t.name=e,t.score=n,this.table.push(t),this.updateTable(),this.paintToPage(),this.setInputFieldListeners()};updateScoreSet=(e,n)=>{for(let t=0;t<this.table.length;t+=1)this.table[t].id===parseInt(e,10)&&(this.table[t].name=n,this.updateTable())};setUpAddListener=()=>{this.addButton.addEventListener("click",(()=>{this.newScoreSet(this.newName.value,this.newScore.value),this.pullFromStorage(),this.newName.value="",this.newScore.value=""}))};setInputFieldListeners=()=>{this.inputField=document.querySelectorAll(".score-set"),this.inputField.forEach((e=>{e.addEventListener("input",(e=>{const n=e.target.value;this.updateScoreSet(e.target.parentElement.id,n)}))}))}}var a=t(379),A=t.n(a),s=t(795),l=t.n(s),c=t(569),d=t.n(c),u=t(565),p=t.n(u),m=t(216),C=t.n(m),f=t(589),g=t.n(f),h=t(800),b={};b.styleTagTransform=g(),b.setAttributes=p(),b.insert=d().bind(null,"head"),b.domAPI=l(),b.insertStyleElement=C(),A()(h.Z,b),h.Z&&h.Z.locals&&h.Z.locals;const y=new i;y.paintToPage(),y.setUpAddListener(),y.setInputFieldListeners(),console.log("Hi friend"),new Promise(((e,n)=>{n()})).then((e=>{console.log(e)})).catch((e=>{console.log(e)}))}},e=>{e(e.s=313)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,